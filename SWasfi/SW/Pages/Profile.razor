    @page "/profile"
    @inject AuthenticationStateProvider AuthenticationStateProvider
    @using SW.Areas.Identity.Data;
    @using SW.Components.Profile
    @using SW.DBServices.Interfaces;
    @inject IPersonDataService PersonData
    @inject NavigationManager NavigationManager

    <AuthorizeView>
        <Authorized>


            <h3 class="text-dark mb-4">Profile</h3>

            @if (Person != null)
            {
                <div class="row mb-3">

                    <ProfilePictureCard Person="Person" />

                    <div class="col-lg-8">
                        <div class="row">
                            <div class="col">
                                <UserSettingsCard Person="Person" />
                                <ContactSettingsCard Person="Person" />
                            </div>
                        </div>

                    </div>
                </div>
            }

        </Authorized>

    </AuthorizeView>


    @code {


        private AuthenticationState authState { get; set; }

        private Person Person { get; set; }

        protected override async Task OnInitializedAsync()
        {
            authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            var user = authState.User;


            if (user.Identity.IsAuthenticated)
            {

                Person = await PersonData.GetPerson(userName: user.Identity.Name);


            }
            else
            {
                NavigationManager.NavigateTo("authinticationrequired", true);
            }


        }


    }


